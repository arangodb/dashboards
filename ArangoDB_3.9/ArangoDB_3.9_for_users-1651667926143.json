{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 24,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "panels": [],
      "title": "Health",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Total number of drop-follower events. This metric is increased on leaders\nwhenever a write operation cannot be replicated to a follower during\nsynchronous replication, and it would be unsafe in terms of data consistency\nto keep that follower.\nThis metric was named `arangodb_dropped_followers_count` in previous\nversions of ArangoDB.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "rate(arangodb_dropped_followers_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Number of drop-follower events",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Total number of failed heartbeat transmissions.\nServers in a cluster periodically send their heartbeats to\nthe Agency to report their own liveliness. This counter gets\nincreased whenever sending such a heartbeat fails. In the single\nserver, this counter is only used in active failover mode.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 3,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "rate(arangodb_heartbeat_failures_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Total number of failed heartbeat transmissions",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 4,
      "panels": [],
      "title": "AQL",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Total number of AQL queries finished.\nThis metric was named `arangodb_aql_all_query` in previous\nversions of ArangoDB.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "hiddenSeries": false,
      "id": 5,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "rate(arangodb_aql_all_query_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Total number of AQL queries finished",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Current number of AQL queries executing.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "arangodb_aql_current_query",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Current number of AQL queries executing",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Total memory limit for all AQL queries combined, in bytes.\nIf this value is reported as `0`, it means there is no total memory\nlimit in place for AQL queries. The value can be adjusted by the setting\nthe `--query.global-memory-limit` startup option.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 18
      },
      "hiddenSeries": false,
      "id": 7,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "arangodb_aql_global_memory_limit",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Total memory limit for all AQL queries combined",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Total memory usage of all AQL queries currently executing.\nThe granularity of this metric is steps of 32768 bytes. The current\nmemory usage of all AQL queries will be compared against the configured\nlimit in the `--query.global-memory-limit` startup option.\nIf the startup option has a value of `0`, then no global memory limit\nwill be enforced. If the startup option has a non-zero value, queries\nwill be aborted once the total query memory usage goes above the configured\nlimit.\n",
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 18
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.5.1",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "expr": "arangodb_aql_global_memory_usage",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Total memory usage of all AQL queries executing; granularity: 32768 bytes steps",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "logBase": 1,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": null,
      "description": "Total number of times the global query memory limit threshold was reached.\nThis can happen if all running AQL queries in total try to use more memory than\nconfigured via the `--query.global-memory-limit` startup option.\nEvery time this counter will increase, an AQL query will have aborted with a\n\"resource limit exceeded\" error.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 26
      },
      "id": 9,
      "targets": [
        {
          "expr": "rate(arangodb_aql_global_query_memory_limit_reached_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of times the global query memory limit threshold was reached",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of times a local query memory limit threshold was reached, i.e.\na single query tried to allocate more memory than configured in the query's\n`memoryLimit` attribute or the value configured via the startup option\n`--query.memory-limit`.\nEvery time this counter will increase, an AQL query will have aborted with a\n\"resource limit exceeded\" error.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 26
      },
      "id": 10,
      "targets": [
        {
          "expr": "rate(arangodb_aql_local_query_memory_limit_reached_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of times a local query memory limit threshold was reached",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for all AQL queries, in seconds.\nThe histogram includes all slow queries.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 34
      },
      "id": 11,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_aql_query_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for all AQL queries",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for all AQL queries, in seconds.\nThe histogram includes all slow queries.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 34
      },
      "id": 12,
      "targets": [
        {
          "expr": "rate(arangodb_aql_query_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for all AQL queries (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for all AQL queries, in seconds.\nThe histogram includes all slow queries.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 42
      },
      "id": 13,
      "targets": [
        {
          "expr": "rate(arangodb_aql_query_time_sum[3m]) / rate(arangodb_aql_query_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for all AQL queries (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for slow AQL queries, in seconds.\nQueries are considered \"slow\" if their execution time is above the\nthreshold configured in the startup options `--query.slow-threshold`\nor `--query.slow-streaming-threshold`, resp.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 42
      },
      "id": 14,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_aql_slow_query_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for slow AQL queries",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for slow AQL queries, in seconds.\nQueries are considered \"slow\" if their execution time is above the\nthreshold configured in the startup options `--query.slow-threshold`\nor `--query.slow-streaming-threshold`, resp.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 50
      },
      "id": 15,
      "targets": [
        {
          "expr": "rate(arangodb_aql_slow_query_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for slow AQL queries (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Execution time histogram for slow AQL queries, in seconds.\nQueries are considered \"slow\" if their execution time is above the\nthreshold configured in the startup options `--query.slow-threshold`\nor `--query.slow-streaming-threshold`, resp.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 50
      },
      "id": 16,
      "targets": [
        {
          "expr": "rate(arangodb_aql_slow_query_time_sum[3m]) / rate(arangodb_aql_slow_query_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Execution time histogram for slow AQL queries (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total execution time of all AQL queries, in milliseconds,\nincluding all slow queries.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 58
      },
      "id": 17,
      "targets": [
        {
          "expr": "rate(arangodb_aql_total_query_time_msec_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total execution time of all AQL queries",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 66
      },
      "id": 18,
      "panels": [],
      "title": "Transactions",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "Total amount of time it took to acquire collection/shard locks for\nwrite operations, summed up for all collections/shards. Will not be increased\nfor any read operations.\nThe value is measured in microseconds.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 67
      },
      "id": 19,
      "targets": [
        {
          "expr": "rate(arangodb_collection_lock_acquisition_micros_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total amount of collection lock acquisition time",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of transactions using sequential locking of collections to avoid deadlocking.\nBy default, a Coordinator will try to lock all shards of a collection in parallel.\nThis approach is normally fast but can cause deadlocks with other transactions that\nlock the same shards in a different order. In case such a deadlock is detected, the\nCoordinator will abort the lock round and start a new one that locks all shards in\nsequential order. This will avoid deadlocks, but has a higher setup overhead.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 67
      },
      "id": 20,
      "targets": [
        {
          "expr": "rate(arangodb_collection_lock_sequential_mode_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of transactions using sequential locking of collections to avoid deadlocking",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of timeouts when trying to acquire collection exclusive locks.\nThis counter will be increased whenever an exclusive collection lock\ncannot be acquired within the configured lock timeout.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 75
      },
      "id": 21,
      "targets": [
        {
          "expr": "rate(arangodb_collection_lock_timeouts_exclusive_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of timeouts when trying to acquire collection exclusive locks",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of timeouts when trying to acquire collection write locks.\nThis counter will be increased whenever a collection write lock\ncannot be acquired within the configured lock timeout.\nThis can only happen if writes on a collection are locked out by\nother operations on the collection that use an exclusive lock. Writes\nare not locked out by other, non-exclusively locked writes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 75
      },
      "id": 22,
      "targets": [
        {
          "expr": "rate(arangodb_collection_lock_timeouts_write_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of timeouts when trying to acquire collection write locks",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in collection truncate operations, including both\nuser-initiated truncate operations and truncate operations\nexecuted by the synchronous replication on followers.\nNote that this metric is only present when the command\nline option `--server.export-read-write-metrics` is set to `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 83
      },
      "id": 23,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_collection_truncate_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in collection truncate operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in collection truncate operations, including both\nuser-initiated truncate operations and truncate operations\nexecuted by the synchronous replication on followers.\nNote that this metric is only present when the command\nline option `--server.export-read-write-metrics` is set to `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 83
      },
      "id": 24,
      "targets": [
        {
          "expr": "rate(arangodb_collection_truncate_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in collection truncate operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in collection truncate operations, including both\nuser-initiated truncate operations and truncate operations\nexecuted by the synchronous replication on followers.\nNote that this metric is only present when the command\nline option `--server.export-read-write-metrics` is set to `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 91
      },
      "id": 25,
      "targets": [
        {
          "expr": "rate(arangodb_collection_truncate_time_sum[3m]) / rate(arangodb_collection_truncate_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in collection truncate operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of collection truncate operations on leaders (excluding synchronous\nreplication). Note that this metric is only present when the command\nline option `--server.export-read-write-metrics` is set to `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 91
      },
      "id": 26,
      "targets": [
        {
          "expr": "rate(arangodb_collection_truncates_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of collection truncate operations (excluding synchronous replication)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document insert operations, including both\nuser-initiated insert operations and insert operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 99
      },
      "id": 27,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_document_insert_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document insert operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in document insert operations, including both\nuser-initiated insert operations and insert operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 99
      },
      "id": 28,
      "targets": [
        {
          "expr": "rate(arangodb_document_insert_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document insert operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document insert operations, including both\nuser-initiated insert operations and insert operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 107
      },
      "id": 29,
      "targets": [
        {
          "expr": "rate(arangodb_document_insert_time_sum[3m]) / rate(arangodb_document_insert_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document insert operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document read-by-primary-key operations. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 107
      },
      "id": 30,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_document_read_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document read-by-primary-key operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in document read-by-primary-key operations. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 115
      },
      "id": 31,
      "targets": [
        {
          "expr": "rate(arangodb_document_read_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document read-by-primary-key operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document read-by-primary-key operations. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 115
      },
      "id": 32,
      "targets": [
        {
          "expr": "rate(arangodb_document_read_time_sum[3m]) / rate(arangodb_document_read_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document read-by-primary-key operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 123
      },
      "id": 33,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_document_remove_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document remove operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 123
      },
      "id": 34,
      "targets": [
        {
          "expr": "rate(arangodb_document_remove_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document remove operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 131
      },
      "id": 35,
      "targets": [
        {
          "expr": "rate(arangodb_document_remove_time_sum[3m]) / rate(arangodb_document_remove_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document remove operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 131
      },
      "id": 36,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_document_replace_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document replace operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 139
      },
      "id": 37,
      "targets": [
        {
          "expr": "rate(arangodb_document_replace_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document replace operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document replace operations, including both\nuser-initiated replace operations and replace operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 139
      },
      "id": 38,
      "targets": [
        {
          "expr": "rate(arangodb_document_replace_time_sum[3m]) / rate(arangodb_document_replace_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document replace operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document update operations, including both\nuser-initiated update operations and update operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 147
      },
      "id": 39,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_document_update_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document update operations",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Total time spent in document update operations, including both\nuser-initiated update operations and update operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 147
      },
      "id": 40,
      "targets": [
        {
          "expr": "rate(arangodb_document_update_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document update operations (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total time spent in document update operations, including both\nuser-initiated update operations and update operations executed by\nthe synchronous replication on followers. This metric\nis only present if the option `--server.export-read-write-metrics` is set\nto `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 155
      },
      "id": 41,
      "targets": [
        {
          "expr": "rate(arangodb_document_update_time_sum[3m]) / rate(arangodb_document_update_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time spent in document update operations (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of document write operations (insert, update, replace, remove) on\nleaders, excluding writes by the synchronous replication on followers.\nThis metric is only present if the option `--server.export-read-write-metrics`\nis set to `true`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 155
      },
      "id": 42,
      "targets": [
        {
          "expr": "rate(arangodb_document_writes_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of document write operations (excluding synchronous replication)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of read-only transactions. In the cluster, this metric will\nbe collected separately for transactions on Coordinators and the\ntransaction counterparts on leaders and followers.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 163
      },
      "id": 43,
      "targets": [
        {
          "expr": "rate(arangodb_read_transactions_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of read transactions",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of transactions aborted. In the cluster, this metric will\nbe collected separately for transactions on Coordinators and the\ntransaction counterparts on leaders and followers.\nThis metric was named `arangodb_transactions_aborted` in previous\nversions of ArangoDB.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 163
      },
      "id": 44,
      "targets": [
        {
          "expr": "rate(arangodb_transactions_aborted_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of transactions aborted",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of transactions committed. In the cluster, this metric will\nbe collected separately for transactions on Coordinators and the\ntransaction counterparts on leaders and followers.\nThis metric was named `arangodb_transactions_committed` in previous\nversions of ArangoDB.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 171
      },
      "id": 45,
      "targets": [
        {
          "expr": "rate(arangodb_transactions_committed_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of transactions committed",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of expired transactions, i.e. transactions that have\nbeen begun but that were automatically garbage-collected due to\ninactivity within the transactions' time-to-live (TTL) period.\nIn the cluster, this metric will be collected separately for transactions\non Coordinators and the transaction counterparts on leaders and followers.\nThis metric was named `arangodb_transactions_expired` in previous\nversions of ArangoDB.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 171
      },
      "id": 46,
      "targets": [
        {
          "expr": "rate(arangodb_transactions_expired_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of expired transactions",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of transactions started/begun. In the cluster, this metric will\nbe collected separately for transactions on Coordinators and the\ntransaction counterparts on leaders and followers.\nThis metric was named `arangodb_transactions_started` in previous\nversions of ArangoDB.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 179
      },
      "id": 47,
      "targets": [
        {
          "expr": "rate(arangodb_transactions_started_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of transactions started",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the received request sizes in bytes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 179
      },
      "id": 50,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_bytes_received_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Bytes received for a request (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 187
      },
      "id": 48,
      "panels": [],
      "title": "Statistics",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "Histogram of the received request sizes in bytes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 188
      },
      "id": 49,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_bytes_received_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Bytes received for a request",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Histogram of the sent response sizes in bytes\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 188
      },
      "id": 52,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_bytes_sent_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Bytes sent for a request",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Histogram of the received request sizes in bytes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 196
      },
      "id": 51,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_bytes_received_sum[3m]) / rate(arangodb_client_connection_statistics_bytes_received_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Bytes received for a request (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the sent response sizes in bytes\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 196
      },
      "id": 54,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_bytes_sent_sum[3m]) / rate(arangodb_client_connection_statistics_bytes_sent_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Bytes sent for a request (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the sent response sizes in bytes\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 204
      },
      "id": 53,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_bytes_sent_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Bytes sent for a request (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of I/O times needed to answer a request. This includes the time\nrequired to read the incoming request as well as the time required to send\nthe response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 204
      },
      "id": 56,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_io_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "I/O time needed to answer a request",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "The number of client connections that are currently open.\nNote: this metric considers only HTTP and HTTP/2 connections, but not VST\nconnections.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 212
      },
      "id": 55,
      "targets": [
        {
          "expr": "arangodb_client_connection_statistics_client_connections",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "The number of client connections that are currently open",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of I/O times needed to answer a request. This includes the time\nrequired to read the incoming request as well as the time required to send\nthe response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 212
      },
      "id": 58,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_io_time_sum[3m]) / rate(arangodb_client_connection_statistics_io_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "I/O time needed to answer a request (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of I/O times needed to answer a request. This includes the time\nrequired to read the incoming request as well as the time required to send\nthe response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 220
      },
      "id": 57,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_io_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "I/O time needed to answer a request (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the time requests are spending on a queue waiting to be\nprocessed. The overwhelming majority of these times should be clearly\nsub-second.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 220
      },
      "id": 60,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_queue_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Queueing time needed for requests (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the time requests are spending on a queue waiting to be\nprocessed. The overwhelming majority of these times should be clearly\nsub-second.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 228
      },
      "id": 59,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_queue_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Queueing time needed for requests",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Histogram of the time required to actually process a request. This does not\ninclude the time required to read the incoming request, the time the request\nis sitting on the queue, or the time required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 228
      },
      "id": 62,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_request_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Request time needed to answer a request",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Histogram of the time requests are spending on a queue waiting to be\nprocessed. The overwhelming majority of these times should be clearly\nsub-second.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 236
      },
      "id": 61,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_queue_time_sum[3m]) / rate(arangodb_client_connection_statistics_queue_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Queueing time needed for requests (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the time required to actually process a request. This does not\ninclude the time required to read the incoming request, the time the request\nis sitting on the queue, or the time required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 236
      },
      "id": 64,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_request_time_sum[3m]) / rate(arangodb_client_connection_statistics_request_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Request time needed to answer a request (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the time required to actually process a request. This does not\ninclude the time required to read the incoming request, the time the request\nis sitting on the queue, or the time required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 244
      },
      "id": 63,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_request_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Request time needed to answer a request (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the total times required to process a request. This includes\nthe time required to read the incoming request, the time the request is\nsitting in the queue, the time to actually process the request, and the\ntime required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 244
      },
      "id": 66,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_total_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time needed to answer a request (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the total times required to process a request. This includes\nthe time required to read the incoming request, the time the request is\nsitting in the queue, the time to actually process the request, and the\ntime required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 252
      },
      "id": 65,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_client_connection_statistics_total_time_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Total time needed to answer a request",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of **asynchronous** HTTP (or VST)\nrequests which have hit this particular instance of `arangod`. Asynchronous\nrefers to the fact that the response is not sent with the HTTP response,\nbut is rather queried separately using the `/_api/jobs` API.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 252
      },
      "id": 68,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_async_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of asynchronously executed HTTP requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Histogram of the total times required to process a request. This includes\nthe time required to read the incoming request, the time the request is\nsitting in the queue, the time to actually process the request, and the\ntime required to send the response.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 260
      },
      "id": 67,
      "targets": [
        {
          "expr": "rate(arangodb_client_connection_statistics_total_time_sum[3m]) / rate(arangodb_client_connection_statistics_total_time_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total time needed to answer a request (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **GET**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 260
      },
      "id": 70,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_get_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP GET requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **DELETE**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 268
      },
      "id": 69,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_delete_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP DELETE requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **OPTIONS**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 268
      },
      "id": 72,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_options_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP OPTIONS requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **HEAD**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 276
      },
      "id": 71,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_head_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP HEAD requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **POST**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 276
      },
      "id": 74,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_post_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP POST requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **PATCH**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 284
      },
      "id": 73,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_patch_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP PATCH requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **other**\nor **ILLEGAL** requests which have hit this particular instance of\n`arangod`. These are all requests, which are not one of the following:\n`DELETE`, `GET`, `HEAD`, `POST`, `PUT`, `OPTIONS`, `PATCH`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 284
      },
      "id": 76,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_other_http_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of other HTTP requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) **PUT**\nrequests which have hit this particular instance of `arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 292
      },
      "id": 75,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_http_put_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of HTTP PUT requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) requests which\nhave hit this particular instance of `arangod`. Note that this counter\nis ever growing during the lifetime of the `arangod` process. However,\nwhen the process is restarted, it starts from scratch. In the Grafana\ndashboards, it is usually visualized as a rate per second, averaged\nwith a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 292
      },
      "id": 78,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_total_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of HTTP requests",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST)\nrequests that have been authenticated with the JWT superuser token,\nwhich have hit this particular instance of\n`arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 300
      },
      "id": 77,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_superuser_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of HTTP requests executed by superuser/JWT",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "On Windows, this figure contains the total number of page faults.\nOn other system, this figure contains the number of major faults the\nprocess has made which have required loading a memory page from disk.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 300
      },
      "id": 80,
      "targets": [
        {
          "expr": "rate(arangodb_process_statistics_major_page_faults_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of major page faults",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of HTTP (or VST) requests\nthat have been authenticated for some user (as opposed to with the\nJWT superuser token), which have hit this particular instance of\n`arangod`.\n\nNote that this counter is ever growing during the lifetime of the\n`arangod` process. However, when the process is restarted, it starts\nfrom scratch. In the Grafana dashboards, it is usually visualized as a\nrate per second, averaged with a sliding window of a minute.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 308
      },
      "id": 79,
      "targets": [
        {
          "expr": "rate(arangodb_http_request_statistics_user_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of HTTP requests executed by user clients",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of threads in the arangod process.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 308
      },
      "id": 82,
      "targets": [
        {
          "expr": "arangodb_process_statistics_number_of_threads",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of threads",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "The number of minor faults the process has made which have not required\nloading a memory page from disk. This figure is not reported on Windows.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 316
      },
      "id": 81,
      "targets": [
        {
          "expr": "arangodb_process_statistics_minor_page_faults_total",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of minor page faults",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "The relative size of the number of pages the process has in real\nmemory compared to system memory. This is just the pages which count\ntoward text, data, or stack space. This does not include pages which\nhave not been demand-loaded in, or which are swapped out. The value is a\nratio between 0.00 and 1.00.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 316
      },
      "id": 84,
      "targets": [
        {
          "expr": "arangodb_process_statistics_resident_set_size_percent",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Resident set size as fraction of system memory",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "The total size of the number of pages the process has in real memory.\nThis is just the pages which count toward text, data, or stack space.\nThis does not include pages which have not been demand-loaded in, or\nwhich are swapped out. The resident set size is reported in bytes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 324
      },
      "id": 83,
      "targets": [
        {
          "expr": "arangodb_process_statistics_resident_set_size",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Resident set size",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Amount of time that this process has been scheduled in user mode,\nmeasured in seconds.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 324
      },
      "id": 86,
      "targets": [
        {
          "expr": "arangodb_process_statistics_user_time",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Process user time",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Amount of time that this process has been scheduled in kernel mode,\nmeasured in seconds.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 332
      },
      "id": 85,
      "targets": [
        {
          "expr": "arangodb_process_statistics_system_time",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Process system time",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of CPU cores visible to the arangod process, unless the\nenvironment variable `ARANGODB_OVERRIDE_DETECTED_NUMBER_OF_CORES`\nis set. In that case, the environment variable's value will be reported.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 332
      },
      "id": 88,
      "targets": [
        {
          "expr": "arangodb_server_statistics_cpu_cores",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of CPU cores visible to the arangod process",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "On Windows, this figure contains the total amount of memory that the\nmemory manager has committed for the arangod process. On other systems,\nthis figure contains the size of the virtual memory the process is\nusing.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 340
      },
      "id": 87,
      "targets": [
        {
          "expr": "arangodb_process_statistics_virtual_memory_size",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Virtual memory size",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Percentage of time that the system CPUs have been waiting for I/O, as\na value between 0 and 100, and as reported by the operating system.\nThis metric is only reported on some operating systems.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 340
      },
      "id": 90,
      "targets": [
        {
          "expr": "arangodb_server_statistics_iowait_percent",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Percentage of time that the system CPUs have been waiting for I/O",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Percentage of time that the system CPUs have been idle, as\na value between 0 and 100, and as reported by the operating system.\nThis metric is only reported on some operating systems.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 348
      },
      "id": 89,
      "targets": [
        {
          "expr": "arangodb_server_statistics_idle_percent",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Percentage of time that the system CPUs have been idle",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of seconds elapsed since server start, including fractional\nseconds.\nThis metric was named `arangodb_server_statistics_server_uptime`\nin previous versions of ArangoDB.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 348
      },
      "id": 92,
      "targets": [
        {
          "expr": "rate(arangodb_server_statistics_server_uptime_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of seconds elapsed since server start",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Physical memory of the system in bytes, as reported by the operating system\nunless the environment variable `ARANGODB_OVERRIDE_DETECTED_TOTAL_MEMORY`\nis set. In that case, the environment variable's value will be reported.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 356
      },
      "id": 91,
      "targets": [
        {
          "expr": "arangodb_server_statistics_physical_memory",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Physical memory in bytes",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Percentage of time that the system CPUs have spent in user mode, as\na value between 0 and 100, and as reported by the operating system.\nThis metric is only reported on some operating systems.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 356
      },
      "id": 94,
      "targets": [
        {
          "expr": "arangodb_server_statistics_user_percent",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Percentage of time that the system CPUs have spent in user mode",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Percentage of time that the system CPUs have spent in kernel mode, as\na value between 0 and 100, and as reported by the operating system.\nThis metric is only reported on some operating systems.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 364
      },
      "id": 93,
      "targets": [
        {
          "expr": "arangodb_server_statistics_system_percent",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Percentage of time that the system CPUs have spent in kernel mode",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of V8 contexts currently busy, that means, they are currently\nworking on some JavaScript task. Normally, only Coordinators and\nsingle servers should have V8 contexts, for DB-Servers and Agents the\nvalue is always zero.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 364
      },
      "id": 96,
      "targets": [
        {
          "expr": "arangodb_v8_context_busy",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of V8 contexts currently busy",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of V8 contexts currently alive. Normally, only Coordinators and\nsingle servers should have V8 contexts, for DB-Servers and Agents the\nvalue is always zero.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 372
      },
      "id": 95,
      "targets": [
        {
          "expr": "arangodb_v8_context_alive",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of V8 contexts currently alive",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This gauge reflects the number of V8 contexts that are currently free.\nIf this number drops to 0 there might be a shortage of V8 contexts.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 372
      },
      "id": 98,
      "targets": [
        {
          "expr": "arangodb_v8_context_free",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of V8 contexts currently free",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This gauge reflects the number of V8 contexts that are currently dirty.\nA V8 context is dirty, if it has executed JavaScript for some time and\nis due for a garbage collection.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 380
      },
      "id": 97,
      "targets": [
        {
          "expr": "arangodb_v8_context_dirty",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of V8 contexts currently dirty",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This is the minimum number of concurrent V8 contexts. This is limited\nby a server option. V8 contexts are created and destroyed as needed\nbut there are never fewer than the limit shown in this metric.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 380
      },
      "id": 100,
      "targets": [
        {
          "expr": "arangodb_v8_context_min",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Minimum number of concurrent V8 contexts",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This is the maximum number of concurrent V8 contexts. This is limited\nby a server option, since V8 contexts can use a lot of RAM. V8 contexts\nare created and destroyed as needed up to the limit shown in this metric.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 388
      },
      "id": 99,
      "targets": [
        {
          "expr": "arangodb_v8_context_max",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Maximum number of concurrent V8 contexts",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 396
      },
      "id": 101,
      "panels": [],
      "title": "Replication",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "During initial replication the existing data from the leader is copied asynchronously\nover to new shards. The amount of documents transported to this server, as a replica for\na shard, is counted here.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 397
      },
      "id": 102,
      "targets": [
        {
          "expr": "rate(arangodb_replication_dump_documents_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of documents replicated in initial asynchronous phase",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total memory usage of all revision trees for collections/shards.\nThe revision trees of collections/shards are normally present\nin RAM in an uncompressed state. However, to reduce the memory\nusage of keeping all revision trees in RAM at the same time, \nrevision trees can be put into \"hibernation\" mode. Any inactive\nrevision tree will automatically be hibernated by ArangoDB after\na while. For the hibernation step, a revision tree will be \ncompressed in RAM, and only the compressed version is then kept.\nLater accesses of a compressed revision tree require uncompressing\nthe tree again. \nThis metrics reports the total memory usage of all revision trees,\nincluding both the hibernated and uncompressed forms).\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 397
      },
      "id": 103,
      "targets": [
        {
          "expr": "arangodb_revision_tree_memory_usage",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total memory usage of all revision trees (both hibernated and uncompressed)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of leader shards on this machine. Every shard has a leader and\npotentially multiple followers.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 405
      },
      "id": 104,
      "targets": [
        {
          "expr": "arangodb_shards_leader_number",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of leader shards on this machine",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of shards not replicated at all. This is counted for all shards\nfor which this server is currently the leader. The number is increased\nby one for every shards for which no follower is in sync.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 405
      },
      "id": 105,
      "targets": [
        {
          "expr": "arangodb_shards_not_replicated",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of shards not replicated at all",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of shards on this machine. Every shard has a leader and\npotentially multiple followers. This metric counts both leader and\nfollower shards.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 413
      },
      "id": 106,
      "targets": [
        {
          "expr": "arangodb_shards_number",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of shards on this machine",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Number of leader shards not fully replicated. This is counted for all\nshards for which this server is currently the leader. The number is\nincreased by one for every shards for which not all followers are in sync.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 413
      },
      "id": 107,
      "targets": [
        {
          "expr": "arangodb_shards_out_of_sync",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of leader shards not fully replicated",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 421
      },
      "id": 108,
      "panels": [],
      "title": "Errors",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "Total number of errors (ERR messages) logged by the logger. \n\nIf a problem is encountered which is fatal to some operation, but not for\nthe service or the application as a whole, then an _error is logged.\n\nReasons for log entries of this severity are for example include missing\ndata, inability to open required files, incorrect connection strings,\nmissing services.\n\nIf an error is logged then it should be taken seriously as it may require \nuser intervention to solve.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 422
      },
      "id": 109,
      "targets": [
        {
          "expr": "rate(arangodb_logger_errors_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of errors logged",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of warnings (WARN messages) logged by the logger, \nincluding startup warnings.\n\nWarnings might indicate problems, or might not. For example, \nexpected transient environmental conditions such as short loss of \nnetwork or database connectivity are logged as warnings, not errors. \n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 422
      },
      "id": 110,
      "targets": [
        {
          "expr": "rate(arangodb_logger_warnings_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of warnings logged",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 430
      },
      "id": 111,
      "panels": [],
      "title": "RocksDB",
      "type": "row"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 431
      },
      "id": 112,
      "panels": [],
      "title": "Connectivity",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "Time to lease a connection from the connection pool. There are two pools,\none for the Agency communication with label `AgencyComm` and one for\nthe other cluster internal communication with label `ClusterComm`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 432
      },
      "id": 113,
      "legend": {
        "show": false
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(arangodb_connection_pool_lease_time_hist_bucket[3m])) by (le))",
          "format": "heatmap",
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "title": "Time to lease a connection from the connection pool",
      "type": "heatmap"
    },
    {
      "datasource": null,
      "description": "Time to lease a connection from the connection pool. There are two pools,\none for the Agency communication with label `AgencyComm` and one for\nthe other cluster internal communication with label `ClusterComm`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 432
      },
      "id": 114,
      "targets": [
        {
          "expr": "rate(arangodb_connection_pool_lease_time_hist_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Time to lease a connection from the connection pool (count of events per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Time to lease a connection from the connection pool. There are two pools,\none for the Agency communication with label `AgencyComm` and one for\nthe other cluster internal communication with label `ClusterComm`.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 440
      },
      "id": 115,
      "targets": [
        {
          "expr": "rate(arangodb_connection_pool_lease_time_hist_sum[3m]) / rate(arangodb_connection_pool_lease_time_hist_count[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Time to lease a connection from the connection pool (average per second)",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the accumulated total time for creating V8\ncontexts, in milliseconds. It is OK if this number keeps growing since\nthe V8 contexts are created and destroyed as needed. In rare cases a\nhigh fluctuation can indicate some unfortunate usage pattern.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 440
      },
      "id": 120,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_creation_time_msec_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Accumulated total time for creating V8 contexts",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 448
      },
      "id": 116,
      "panels": [],
      "title": "Network",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "Number of requests forwarded to another Coordinator.\nRequest forwarding can happen in load-balanced setups,\nwhen one Coordinator receives and forwards requests\nthat can only be handled by a different Coordinator.\nThis includes requests for streaming transactions,\nAQL, query cursors, Pregel jobs and some others.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 449
      },
      "id": 117,
      "targets": [
        {
          "expr": "rate(arangodb_network_forwarded_requests_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Number of requests forwarded to another Coordinator",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of V8 context enter failures. A context receives a context\nenter event every time it begins to execute some JavaScript. If no\ncontext is available at such a time the system waits for 60s for a\ncontext to become free. If this does not happen within the 60s, the\ncontext enter event fails, a warning is logged and this counter is\nincreased by one.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 449
      },
      "id": 122,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_enter_failures_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of V8 context enter failures",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 457
      },
      "id": 118,
      "panels": [],
      "title": "V8",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of V8 contexts ever created. It is\nOK if this number keeps growing since the V8 contexts are created and\ndestroyed as needed. In rare cases a high fluctuation can indicate\nsome unfortunate usage pattern.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 458
      },
      "id": 119,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_created_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of V8 contexts ever created",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of V8 context exit events.\nA context receives a context exit event every time it finishes to\nexecute some JavaScript.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 458
      },
      "id": 124,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_exited_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of V8 context exit events",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "This counter reflects the total number of V8 contexts ever destroyed.\nIt is OK if this number keeps growing since the V8 contexts are\ncreated and destroyed as needed. In rare cases a high fluctuation can\nindicate some unfortunate usage pattern.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 466
      },
      "id": 121,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_destroyed_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of V8 contexts ever destroyed",
      "type": "graph"
    },
    {
      "datasource": null,
      "description": "Total number of V8 context enter events. A context receives a context\nenter event every time it begins to execute some JavaScript. This number\nis a rough estimate as to how much JavaScript the server executes.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 474
      },
      "id": 123,
      "targets": [
        {
          "expr": "rate(arangodb_v8_context_entered_total[3m])",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "Total number of V8 context enter events",
      "type": "graph"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 482
      },
      "id": 125,
      "panels": [],
      "title": "Agency",
      "type": "row"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 483
      },
      "id": 126,
      "panels": [],
      "title": "Scheduler",
      "type": "row"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 484
      },
      "id": 127,
      "panels": [],
      "title": "Maintenance",
      "type": "row"
    },
    {
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 485
      },
      "id": 128,
      "panels": [],
      "title": "License",
      "type": "row"
    },
    {
      "datasource": null,
      "description": "This instance's remaining license validity time.\n",
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 486
      },
      "id": 129,
      "targets": [
        {
          "expr": "arangodb_license_expires",
          "legendFormat": "{{instance}}:{{shortname}}",
          "refId": "A"
        }
      ],
      "title": "This instance's license expiry in days",
      "type": "graph"
    }
  ],
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "ArangoDB_3.9_for_users",
  "uid": "1zWJvd_7z",
  "version": 1,
  "weekStart": ""
}
